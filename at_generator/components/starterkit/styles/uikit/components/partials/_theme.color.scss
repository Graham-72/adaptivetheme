/**
 * Color
 ========================================================================== */


/**
 * base.elements
 ========================================================================== */

// html and body
html,
body {
  background-color: $body-background-color; // this matches the navbar for offcanvas menus.
}


body {
  color: $text-color;
}


// Links.
a {
  color: $link-color;

  &:link,
  &:visited {
    color: $link-color; // or use $link-visited-color
  }

  &:active,
  &.active {
    color: $link-active-color;
  }

  &:hover,
  &:focus {
    color: $link-hover-color;
  }
}


// Blockquotes, Bootstrap style.
blockquote {
  border-color: $border-color; // LTR

  p {
    &:first-child {
      &:before {
        color: $border-color;
      }
    }
  }

  small {
    color: lighten($text-color, $lighten-more);
  }

  // Float right with text-align: right
  &.pull-right {
    border-#{$flow-to}-color: $border-color; // TODO check concantenation is OK
  }
}


// A better looking default horizontal rule
hr {
  border-color: $border-color;
}


/**
 * Remove text-shadow in selection highlight: h5bp.com/i
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */
::-moz-selection {
  background: $selection-color;
}

::selection {
  background: $selection-color;
}


/**
 * Page
 *  - mainly for markup that is printed directly in page.html.twig and
 *    .region {}
 ========================================================================== */

// Page wrapper.
.page {
  background-color: $page-background-color;
}


// Regions
//  - .regions is the main wrapper selector for all regions within a page.
.regions {
  //background-color: $regions-background-color;
}


//  Page Rows - these match the Site Builder layout.

// Messages
.page__messages {}


// Messages
.page__leaderboard {}


// Header
.page__header {
  @include page-row-colors($page-header-background-color, $page-header-color, $page-row-fullwidth);
}


// Navbar
.page__navbar {
  @include page-row-colors($page-navbar-background-color, $page-navbar-color, $page-row-fullwidth);

  a,
  .menu a {
    color: inherit;
  }
}


// Features
.page__features {
  @include page-row-colors($page-features-background-color, $page-features-color, $page-row-fullwidth);
}


// Main
.page__main {}


// Tertiary
.page__tertiary {
  @include page-row-colors($page-tertiary-background-color, $page-tertiary-color , $page-row-fullwidth);
}

// Footer
.page__footer {
  @include page-row-colors($page-footer-background-color, $page-footer-color, $page-row-fullwidth);

  a,
  .menu a {
    color: inherit;

    &:hover,
    &:focus {
      color: inherit;
    }
  }
}

// Theme attribution message. This is a toggle setting in the advanced theme
// settings, you can turn it on/off using the Markup overrides extension.
.attribution {
  background-color: $page-navbar-background-color;
}


/**
 * Branding styles
 *  - Drupal core branding block.
 ========================================================================== */

.block--system-branding-block {}

.site-branding-text {
  a {
  }
}

.site-logo {}
.site-name {}
.site-slogan {}


/**
 * Blocks
 ========================================================================== */

.block {}
.block__title {}


/**
 * Menus
 *  - style Drupal core block menus.
 *  - for the drop menu and other responsive menus see the mixins and the
 *    _navbar.scss partial.
 ========================================================================== */

.menu {
  li {
    &.active-trail > a {
      //color: $menu-active-color;
      //background-color: $menu-background-active-color;
    }

    // If menu arrows are true, add font-awesome and icons for
    // expanded and collapsed selectors.
    @if $menu-arrows == true {
      &.collapsed > a:after,
      &.expanded > a:after {
        color: $text-color;
      }
    }
  }

  a {
    color: $menu-color;
    //background-color: $menu-background-color;

    &:hover,
    &:focus {
      color: $menu-hover-color;
      //background-color: $menu-background-hover-color;
    }

    &.active {
      color: $menu-active-color;
      //background-color: $menu-background-active-color;
    }
  }

  // Nested menus.
  .menu {
    a {
      &:hover,
      &:focus {}
      &.active-trail {}
    }
  }
}


/**
 * Responsive menu styles.
 *
 * Mixins provide the basic struture and a base style (not much), the rest
 * is up to you, add colors, borders, padding and so on. Icons such as
 * the hamburger and arrows are set in variables in _variables.scss, and you
 * use the color varaibles for menus from there also.
 *
 * Menu styles are set in Appearance settings using the Responsive Menus extension.
 * There you select a block, breakpoint, a default style and a responsive style.
 * You can safely remove mixins from this file if you not going to use them later
 * on, and want to save a few bytes in stylsheet size.
 *
 * Each mixin takes one or more parameters. Use these to customize the basic struture
 * of the menu, or call options, for example you can place the offcanvas menu on the
 * left or right.
 *
 * Do not import into breakpoints unless you are not using the Responsive Menu
 * settings in Appearance Extensions, in which case you will need to load the
 * at_core/at.responsivemenus library and provide it's required drupalSettings.
 *
 * Breakpoints are handled in matchMedia using Enquire.
 *
 * Responsive styles are a combination of three things:
 *  1. Sass/CSS defined here (with breakpoints etc).
 *  2. jQuery: responsive-menus.js in AT Core libraries which adds/toggles classes.
 *  3. Theme settings as set in your themes Advanced extention settings.
 ========================================================================== */


// Aggressively force the menu to inherit the page/regions background,
// this gives us some pretty usable styles for free.
.rm-block,
.rm-block * {
  background-color: inherit;
  color: inherit;
}


// Provide a consistant style for visible click handles.
.rm-toggle  {
  span {
    background: transparent;
  }
}


// Provide a reasonbly consistant menu style accross all menu types,
// you may need to tweak some types due to the differences in layout
// and overall design of the menu.
.rm-block__content {
  .menu {
    li {
      &.active-trail > a {
        color: $resp-menu-active-color;
        background: $resp-menu-active-background-color;
      }
    }

    a {
      color: $resp-menu-color;
      background: $resp-menu-background-color;

      &:active {
        text-shadow: 0 1px 1px rgba(255, 255, 255, 0.8);
        opacity: 0.9;
      }

      &:hover,
      &:focus {
        color: $resp-menu-hover-color;
        background-color: $resp-menu-hover-background-color;
      }

      &.active {
        color: $resp-menu-active-color;
        background-color: $resp-menu-active-background-color;

        &[href="/"] {
          background-color: transparent; // Match Drupal base path for frontpage/home links

          &:hover,
          &:focus {
            color: $resp-menu-hover-color;
            background-color: $resp-menu-hover-background-color;
          }
        }
      }
    }
  }
}


// Customize responsive menus for this theme.
.ms-dropmenu {
  .rm-block__content {
    a {
      &:after {
      }
    }

    li {
      &.expanded li {
      }
    }
  }
}


.ms-horizontal {
  .rm-block__content {
    a {
      &:before,
      &:after {
      }
    }
  }
}


.ms-offcanvas {
  .rm-block__content {
    opacity: .001;
    background-color: $body-background-color;
    color: $page-background-color;
  }

  > .page,
  .rm-block__content {
  }
}


.ms-tiles {
  .rm-block__content {
    .menu-level-1 {
      > li {
        background-color: $resp-menu-active-background-color;
      }
    }
  }
}


.ms-flipslide {
  &.rm-is-open {
    .rm-block__content {
      .menu-level-1 > li {
        border-bottom: 1px solid rgba(255, 255, 255, 0.4);

        &:last-child {
        }

        > a {
          background-color: rgba(255, 255, 255, 0.3);
        }
      }
    }
  }
}


/**
 * Breadcrumbs
 ========================================================================== */

.breadcrumb {
  li {
    &:before {
      color: $breadcrumb-seperator-color;
    }
  }

  a {
    color: $breadcrumb-color;
    text-decoration: none;
  }
}


/**
 * Tables
 * Base styles.
 ========================================================================== */

table {
  border-color: $border-color;
}


/**
 * Table Theme
 * Style Drupal selectors for tables.
 ========================================================================== */

// tr, takes extensive styles if enabled in variables.scss.
tr {
  border-color: $border-color;

  // Row striping (zebra).
  @if $table-row-striping == true {
    &.odd {
      background: $table-row-odd-color;
    }

    &.info,
    &.even,
    &:nth-child(2n+2)  {
      background: $table-row-even-color;
    }
  }

  // Hover color.
  @if $tr-hover == true {
    &:hover {
      background: $tr-hover-color;
    }
  }

  // Column striping, applies to the active column in sortable tables.
  @if $table-col-striping == true {
    &.odd td.active {
      background: $table-col-odd-color;
    }
    &.even td.active {
      background: $table-col-even-color;
    }
  }
}


// Captions and cell content.
caption {}


// thead.
thead {
  tr {
    color: $thead-text-color;
    background-color: $thead-background-color;
  }
}


// tr, td and th border properties.
tr,
td,
th {
  border-color: $border-color;
}


/**
 * Forms
 *  - This probably seems like a lot - remember AT unsets system.theme.css and
 *    gives you complete control over all form elements.
 *
 * Note:
 *  - input type submit is treated as a 'button', see _buttons.scss
 *  - for drop buttons see _buttons.scss
 ========================================================================== */

// Select, Textarea and most input types
// Select, Textarea and most input types
textarea,
select,
input[type="date"],
input[type="datetime"],
input[type="datetime-local"],
input[type="email"],
input[type="month"],
input[type="number"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="text"],
input[type="time"],
input[type="url"],
input[type="week"] {

  color: $form-text-color;
  border-color: $form-border-color;
  background-color: $form-background-color;

  box-shadow: rgba(0,0,0,0.1) 0 1px 2px inset;

  &:focus {
    border-color: $form-border-color;
    color: $form-text-focus-color;
  }

  &:hover,
  &:focus {
    background-color: $form-background-focus-color;
  }

  &[disabled] {
    &:hover,
    &:focus {
      color: $form-text-focus-color;
    }
  }
}


/**
 * Collapsible details.
 *
 * @see collapse.js
 * @thanks http://nicolasgallagher.com/css-background-image-hacks/
 */
details {
  border-color: $form-border-color;
}


// Readonly
input,
select,
textarea {
  &[readonly] {
    background: $text-background-color;
    color: $text-color;
  }
}


// Disabled
button[disabled],
input[disabled],
select[disabled],
select[disabled] option,
select[disabled] optgroup,
textarea[disabled],
a.button_disabled {
  background: $text-background-color;
  color: $text-color;
}


// Placeholders
input::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
  color: $form-text-color;
}

input:-moz-placeholder,
textarea:-moz-placeholder {
  color: $form-text-color;
}

input.placeholder_text,
textarea.placeholder_text {
  color: $form-text-color;
}


/**
 * Form Theme
 ========================================================================== */

// Filters and tips
.filter-wrapper {
  border-color: $form-border-color;
}


// Tips
.tips {
  color: $form-help-color;
}


// Form item descriptions
.description {
  color: $form-help-color;
}


.marker {
  color: $form-marker-color;
}


.form-required:after {
  color: $form-marker-color;
}


// Errors.
.form-item {
  input.error,
  textarea.error,
  select.error {
    border-color: $error-border-color;
  }
}


/**
 * Buttons
 * We include button styling seperate (from _forms.scss) mainly because the form
 * styles are quite long already and we often want to add unique button variants.
 *
 *  - applies to elements with class "button", includes styles for:
 *  - input buttons
 *  - anchor links styled as buttons
 *  - drop buttons
 *  - action link buttons
 ========================================================================== */

button,
.button {
  box-shadow: rgba(255, 255, 255, 0.5) 0 1px 0 inset;
  color: $button-color;
  background: $button-background-color;
  border-color: $button-border-color;
  opacity: 0.9;

  &:hover,
  &:focus {
    opacity: 1;
    color: $button-hover-color;
    background-color: $button-background-hover-color;
  }

  &[disabled] {
    &:hover {
      color: darken($button-color, $darken); // No variable because it's just disabled, this works fine.
    }
  }
}


// Primary button
.button--primary {
  @include button-variant($hightlight-text-color, $hightlight-background-color, $hightlight-border-color);
}


// Danger button, e.g. delete buttons often have this class.
.button--danger {
  @include button-variant($error-text-color, transparent, transparent);
}


// Action button
.button-action {
  @include button-variant($hightlight-text-color, $hightlight-background-color, $hightlight-border-color);
}


/* Drop buttons */
.js .dropbutton-widget {
  background-color: $page-background-color;
  border-color: $button-border-color;

}

.dropbutton {
  .secondary-action {
    border-top-color: $button-border-color;

    .button {
      background: $page-background-color;

      &:hover,
      &:focus {
      }
    }
  }

  .dropbutton-toggle {
    button {
      &:hover {
        background: transparent;
      }
    }
  }
}


// Dropbutton Multiple
.dropbutton-multiple {
  .dropbutton {
    border-right-color: $button-border-color;

    .publish {
      .button {
        @include button-variant($hightlight-text-color, $hightlight-background-color, $hightlight-border-color);
      }
    }

    // RTL
    @at-root [dir="rtl"] {
      .dropbutton-multiple .dropbutton {
        border-left-color: $button-border-color;
      }
    }
  }

  &.open {
    .dropbutton-action .button {
      border-radius: $button-border-radius 0 0 0;
    }
  }

  // Include secondary actions after "open" so
  // the styles cascade properly.
  .dropbutton {
    .secondary-action {
      .button {
        border-radius: 0 0 0 $button-border-radius;

        &:hover,
        &:focus {
          border-radius: 0 0 0 $button-border-radius;
        }
      }
    }
  }
}


/**
 * File icons
 * AT unsets Drupal core file field CSS for image icons and replaces them
 * with FontAwesome icons.
 ========================================================================== */

.file {
  a:before {
    color: $text-color;
  }
}


/**
 * Field Taxonomy Reference
 ========================================================================== */

.field-type-taxonomy-term-reference {
  @if ($field-taxonomy-item-as-labels == true) {
    span {
      background: lighten($text-background-color, $lighten-more);
      color: $text-color;
      border-color: $border-color;

      &:hover,
      &:focus {
        background: $text-background-color;
      }

      a {
        color: $text-color;

        &:hover,
        &:focus {
        }
      }
    }
  }
}


/**
 * Labels.
 *  -  for example "new" mark on comments, tags etc.
 *
 *  TODO: fix this stuff up, its just a copy/paste from system.theme.css at the moment.
 ========================================================================== */

.filter-help a,
.more-help-link a {
  &:after {
    color: $border-color;
  }
}


/**
 * Messages
 *  - style system messages such as status, warning and error.
 ========================================================================== */

/* Success (status) */
.messages--status,
table tr.ok {
  background-color: $success-background-color;
}

.messages--status,
.ok {
  color: $success-text-color;
}


/* Warning */
.messages--warning,
table tr.warning {
  background-color: $warning-background-color;
}

.messages--warning,
.warning {
  color: $warning-text-color;
}


/* Error */
.messages--error,
table tr.error {
  background-color: $error-background-color;
}

.messages--error,
.error {
  color: $error-text-color;
}


// Devel query messages
.dev-query {
  color: $page-background-color;
}


// xdebug-var-dump
body > pre,
.xdebug-var-dump {
  color: $page-background-color;
}


.page {
  .xdebug-var-dump {
    color: $text-color;
  }
}


// SASS errors
body {
  &:before {
    color: $error-text-color;
  }
}

