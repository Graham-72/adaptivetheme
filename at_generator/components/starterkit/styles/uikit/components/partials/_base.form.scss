/**
 * Form Base
 * Set base styes for form elements.
 ========================================================================== */

input,
select,
button,
textarea {
  @include adjust-font-size-to($medium);
}


// Select, Textarea and most input types
textarea,
select,
input[type="date"],
input[type="datetime"],
input[type="datetime-local"],
input[type="email"],
input[type="month"],
input[type="number"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="text"],
input[type="time"],
input[type="url"],
input[type="week"] {
  @include output-rhythm(padding, $xx-small $x-small);

  border-radius: $form-border-radius;
  transition: all, .15s, linear;
  box-shadow: rgba(0,0,0,0.1) 0 1px 2px inset;

  max-width: 100%;
  box-sizing: border-box;

  color: $form-text-color;
  border: $form-border-width $form-border-style $form-border-color;
  background-color: $form-background-color;

  &:focus {
    outline: 0;
    outline: thin dotted \9; // IE9
    border-color: $form-border-color;
    color: $form-text-focus-color;
  }

  &:hover,
  &:focus {
    background-color: $form-background-focus-color;
  }

  &[disabled] {
    cursor: not-allowed;

    &:hover,
    &:focus {
      color: $form-text-focus-color;
    }
  }
}


// Input radios can collapse in flexible tables, lets just hammer on
// a min-width for all inputs as all are unsuable smaller than this.
input {
  min-width: 13px;
}


// Checkbox, radio, file.
input {
  &[type="checkbox"],
  &[type="radio"] {
    display: inline-block;
    position: relative;
    bottom: 1px;
  }

  // Focus for file, radio and checkbox
  &[type="file"]:focus,
  &[type="radio"]:focus,
  &[type="checkbox"]:focus {}
}


// Select
select {
  > option {}
}


// Set height auto for textarea and selects.
textarea,
select[size],
select[multiple] {
  height: auto;
}


// Label
label {
  font-weight: $font-weight-semibold;
  text-decoration: none;
  white-space: nowrap;
  display: block;

  // radio, checkbox options
  &.option {
    font-weight: normal;
    display: inline;
    padding: 0 3px;
  }
}


// Fieldset
fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}


// Legend
legend {}


details {
  border: $form-border-width $form-border-style $form-border-color;
  border-radius: $border-radius;

  @include output-rhythm(margin, $medium 0);
}


summary {
  cursor: pointer;
  @include output-rhythm(padding, $x-small);
}


// Readonly
input,
select,
textarea {
  &[readonly] {
    background: $text-background-color;
    color: $text-color;
  }
}


// Disabled
button[disabled],
input[disabled],
select[disabled],
select[disabled] option,
select[disabled] optgroup,
textarea[disabled],
a.button_disabled {
  box-shadow: none;
  opacity: 0.7;
  user-select: none;
  color: #888;
  cursor: default;
  -moz-user-select: -moz-none;
  -webkit-user-select: none;
  -khtml-user-select: none;
}


// Invalid
input,
button,
.button,
select,
textarea {
  &:invalid {
    box-shadow: none;
  }

  &:focus:invalid {}
}


// Placeholders
input::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
  color: $form-text-color;
}

input:-moz-placeholder,
textarea:-moz-placeholder {
  color: $form-text-color;
}

input.placeholder_text,
textarea.placeholder_text {
  color: $form-text-color;
}
