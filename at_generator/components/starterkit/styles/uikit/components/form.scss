@import "partials/base";

/**
 * Forms
 *  - This probably seems like a lot - remember AT unsets system.theme.css and
 *    gives you complete control over all form elements.
 *
 * Note:
 *  - input type submit is treated as a 'button', see _buttons.scss
 *  - for drop buttons see _buttons.scss
 ========================================================================== */

.form-item {
  @include output-rhythm(margin, 0 0 $medium);
}


.form-actions {
  @include output-rhythm(margin, $medium 0);
}


// Input radios can collapse in flexible tables, yes really, in Firefox they
// can end up being tiny little dots!
input {
  min-width: 13px;
}


input,
select,
button,
textarea {
  @include adjust-font-size-to($medium);
}


input,
button,
.button,
select,
textarea {
  // Suppress red glow that Firefox
  // adds to form fields by default.
  &:invalid {
    @include box-shadow(none);
  }

  // Add blue glow.
  &:focus {
    @include box-shadow(#06f 0 0 5px 0);
    // for Opera
    z-index: 1;
  }
}


// Select, Textarea and most input types
textarea,
select,
input[type="date"],
input[type="datetime"],
input[type="datetime-local"],
input[type="email"],
input[type="month"],
input[type="number"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="text"],
input[type="time"],
input[type="url"],
input[type="week"] {
  @include output-rhythm(padding, $xx-small $x-small);
  @include border-radius($form-border-radius);
  @include transition(all, .15s, linear);
  @include box-shadow(rgba(0,0,0,0.1) 0 1px 2px inset);

  max-width: 100%;
  line-height: normal;
  color: $form-text-color;
  border: $form-border-width $form-border-style $form-border-color;
  background-color: $form-background-color;

  &:focus {
    outline: 0;
    outline: thin dotted \9; // IE9
    border-color: $form-border-color;
    color: $form-text-focus-color;
  }

  &:hover,
  &:focus {
    background-color: $form-background-focus-color;
  }

  &[disabled] {
    cursor: not-allowed;

    &:hover,
    &:focus {
      color: $form-text-focus-color;
    }
  }
}


button[disabled],
input[disabled],
select[disabled],
select[disabled] option,
select[disabled] optgroup,
textarea[disabled],
a.button_disabled {
  @include box-shadow(none);
  opacity: 0.7;
  user-select: none;
  color: #888;
  cursor: default;
  -moz-user-select: -moz-none;
  -webkit-user-select: none;
  -khtml-user-select: none;
}

// Checkbox, radio, file.
input {
  &[type="checkbox"],
  &[type="radio"] {
    display: inline-block;
    position: relative;
    bottom: 1px;
  }

  // Focus for file, radio and checkbox
  &[type="file"]:focus,
  &[type="radio"]:focus,
  &[type="checkbox"]:focus {}
}


// Checkbox and radio Drupal form wrappers.
.form-checkboxes,
.form-radios {
  @include output-rhythm(margin, 0 0 $medium);
}
.form-type-radio,
.form-type-checkbox {
  margin: 0;

  .description {
    margin-#{$flow-from}: 2.4em;
  }
}


// Radio/s container-inline
.form-type-radios {
  .container-inline {
    label:after {
      content: none;
    }

    .form-type-radio {
      @include output-rhythm(margin, 0 $medium);
    }
  }
}


// Readonly
input,
select,
textarea {
  &[readonly] {
    background: $text-background-color;
    color: $text-color;
  }
}


// Focus invalid
input,
textarea,
select {
  &:focus:invalid {}
}


// Set height auto for textarea and some selects.
textarea,
select[size],
select[multiple] {
  height: auto;
}


// Select
select {
  > option {}
}


// Separate rule for Firefox.
// Separate rule for IE, too.
// Cannot stack with WebKit's.
input::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
  color: $form-text-color;
}

input:-moz-placeholder,
textarea:-moz-placeholder {
  color: $form-text-color;
}

input.placeholder_text,
textarea.placeholder_text {
  color: $form-text-color;
}


// Label
label {
  font-weight: $font-weight-semibold;
  text-decoration: none;
  white-space: nowrap;
  display: block;

  // radio, checkbox options
  &.option {
    font-weight: normal;
    display: inline;
    padding: 0 3px;
  }
}


// Fieldset, reset.
fieldset,
fieldset.form-item {
  border: 0;
  margin: 0;
  padding: 0;
}


// Legend
legend {
}


// Textarea
textarea {
  resize: vertical; // Allow only vertical resizing of textareas.
}


// Filters and tips
.filter-wrapper {
  border-color: $form-border-color;
  border-style: $form-border-style;
  border-width: $form-border-width;
  border-top: 0;
}


// Tips
.tips {
  font-size: 0.85em;
  color: $form-help-color;

  li {
    list-style: none;
  }
}


// Form item descriptions
.description {
  color: $form-help-color;
  font-size: 0.85em;
}


// Strip vertical margins inside tables
tr.odd,
tr.even {
  .form-item {
    margin-top: 0;
    margin-bottom: 0;
    white-space: nowrap;
  }
}


// Labels
.form-composite > legend,
h4.label {
  font-size: inherit;
  font-weight: $font-weight-semibold;
  margin: 0;
  padding: 0;
}

.marker {
  color: $form-marker-color;
}

.form-required:after {
  color: $form-marker-color;
  /* Use a Unicode symbol to prevent screen readers from announcing the text. */
  content: " \204E ";
  line-height: 1;
  vertical-align: super;
}


// abbr usesage in drupal forms
abbr {
  &.form-required,
  &.tabledrag-changed,
  &.ajax-changed {
    border-bottom: none;
  }
}


// Errors
.form-item {
  input.error,
  textarea.error,
  select.error {
    border: 2px solid red;
  }
}


// Container inline
.container-inline {
  display: inline-block;

  label:after {
    content: ':';
  }

  .form-actions,
  &.form-actions {
    margin-top: 0;
    margin-bottom: 0;
  }
}


// Adjust specific form field types
form {
  // Form field image
  .field-type-image {
    .image-preview {
      padding: 0;
      background: transparent;
      @include output-rhythm(margin, 0 $medium $medium 0); // LTR
    }

    .image-widget-data {
      > div:first-child {
        margin-top: 0;
      }
    }
  }

  @at-root [dir="rtl"] form .field-type-image .image-preview {
    @include output-rhythm(margin, 0 0 $medium $medium);
  }

  // Table drag styles
  .field-edit-link {
    margin: 0 0.3em;
  }

  .field-multiple-table {
    margin: 0;

    .field-multiple-drag {
      width: 30px;
      padding-right: 0; // LTR

      .tabledrag-handle {
        padding-right: .5em; // LTR
      }
    }
  }

  .field-add-more-submit {
    margin: .5em 0 0;
  }

  // RTL for table drag
  @at-root [dir="rtl"] form .field-multiple-table .field-multiple-drag {
    padding-left: 0;

    .tabledrag-handle {
      padding-left: .5em;
    }
  }
}


/*
 * Autocomplete.
 *
 * @see autocomplete.js
 */

/* Suggestion list */
.ui-autocomplete li.ui-menu-item a.ui-state-focus,
.autocomplete li.ui-menu-item a.ui-state-hover {
  background: #0072b9;
  color: #fff;
  margin: 0;
}

/**
 * Collapsible details.
 *
 * @see collapse.js
 * @thanks http://nicolasgallagher.com/css-background-image-hacks/
 */
details {
  border: $form-border-width $form-border-style $form-border-color;
  @include border-radius($border-radius);
  @include output-rhythm(margin, $medium 0);

  > .details-wrapper {
    @include output-rhythm(margin, $medium);
  }
}


/* @todo Regression: The summary of uncollapsible details are no longer
     vertically aligned with the .details-wrapper in browsers without native
     details support. */
summary {
  cursor: pointer;
  @include output-rhythm(padding, $x-small);
}

.collapse-processed {
  > summary {
    @include output-rhythm(padding, $x-small);

    &:before {
      font-family: FontAwesome, sans-serif;
      content: $form-details-summary-open;
      float: left;
      margin: -1px 0 0;
      @include output-rhythm(height, $medium);
      @include output-rhythm(width, $medium);
    }
  }
}

.collapse-processed:not([open]) > summary:before {
  content: $form-details-summary-closed;
}


// RTL for collapsible elements (mainly details)
[dir="rtl"] {
  .collapse-processed > summary:before {
    float: right;
  }

  .collapse-processed:not([open]) > summary:before {
    content: $form-details-summary-closed-rtl;
  }
}


// Special case for blocks config page to be nice.
.block-list-secondary {
  border-bottom-width: 1px;
  @include box-sizing(border-box);
  @include output-rhythm(padding, 0 $small);
}
